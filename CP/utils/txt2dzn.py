# -*- coding: utf-8 -*-
"""txt2dzn.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1s-uCxcGqsVyPvzsbqqZfMo5v0lNpODLn
"""

import os

input_folder = "/content/vlsi-instances/txt-instances"
output_folder = "/content/vlsi-instances/dzn-instances"

# Create the output folder if it doesn't exist
if not os.path.exists(output_folder):
    os.makedirs(output_folder)

# Iterate over the input files
for filename in os.listdir(input_folder):
    if filename.endswith(".txt"):
        input_file = os.path.join(input_folder, filename)
        output_file = os.path.join(output_folder, f"{os.path.splitext(filename)[0]}.dzn")

        # Read input from text file
        with open(input_file, 'r') as file:
            lines = file.readlines()

        # Extract values from input
        W = int(lines[0].strip())
        N = int(lines[1].strip())
        circuits = [tuple(map(int, line.strip().split())) for line in lines[2:]]

        # Generate DZN file content
        dzn_content = f'W = {W};\nN = {N};\nCIRCUITS = [|'
        for circuit in circuits:
            dzn_content += f' {circuit[0]}, {circuit[1]} |\n'
        dzn_content = dzn_content.rstrip('\n')  # Remove the trailing newline from the last circuit
        dzn_content += '];'

        # Write DZN file
        with open(output_file, 'w') as file:
            file.write(dzn_content)

import zipfile

output_folder = "/content/vlsi-instances/dzn-instances"
zip_filename = "dzn-instances.zip"

# Create a ZIP archive of the output folder
with zipfile.ZipFile(zip_filename, 'w', zipfile.ZIP_DEFLATED) as zipf:
    for root, _, files in os.walk(output_folder):
        for file in files:
            file_path = os.path.join(root, file)
            zipf.write(file_path, os.path.relpath(file_path, output_folder))

